<?php# connection variablesrequire("connection.php");$debugging = true;#$debugging = false;# table names$LOGIN_TABLE = 'tkb_login';$DOCUMENTS_TABLE = 'tkb_documents';$DOC_JUDGEMENTS_TABLE = 'tkb_document_annotations';$EVENT_JUDGEMENTS_TABLE = 'tkb_event_annotations';$EVENTS_TABLE = 'tb_events';$INSTANCES_TABLE = 'tb_instances';$SENTENCES_TABLE = 'tb_sentences';$topics = array('none', 'terrorist acts', 'perceptions', 'historical',		'anti-terrorism', 		'people', 'finances','trends', 'vulnerabilities', 'other');// Connect to host and select database$db_conn = mysql_connect($hostname, $username, $password);if (mysql_errno()) {	echo "<b><font color=#ff0000>There is a problem with the database connection, try again later.</font></b>";	echo "<p>Please send an email to marc@cs.brandeis.edu if the problem persists.<hr>";	exit;    echo mysql_errno() . ": " . mysql_error(). "\n<p><hr><p>\n\n";}mysql_select_db($db, $db_conn);if (mysql_errno()) {    echo mysql_errno() . ": " . mysql_error(). "\n<p><hr><p>\n\n";}function printVars(){	global $debugging, $HTTP_GET_VARS, $HTTP_POST_VARS;	if ($debugging) {		foreach ($HTTP_GET_VARS as $var => $value) {			echo "\$HTTP_GET_VARS['$var'] => '$value'<br>\n"; }		foreach ($HTTP_POST_VARS as $var => $value) {			echo "\$HTTP_POST_VARS['$var'] => '$value'<br>\n"; }	}}function checkLogin($name){	// Is $name on the list of allowed logins?	global $LOGIN_TABLE;	$query = "SELECT * FROM $LOGIN_TABLE WHERE name = '$name'";	$rows = dbSelect($query,'checkLogin()');	if ($rows and count($rows) > 0) {return true; } else { return false; }}function getDocumentTitle($fileName){	global $db_conn, $DOCUMENTS_TABLE;	$query = "SELECT title FROM $DOCUMENTS_TABLE WHERE docid = '$fileName'";	$result = dbSelect($query,'getDocumentTitle');	$firstRow = $result[0];	return $firstRow[0];}function numberOfArticlesAnnotated($name) {	global $DOC_JUDGEMENTS_TABLE;	$query = "SELECT COUNT(*) FROM $DOC_JUDGEMENTS_TABLE WHERE annotator = '$name'";	$rows = dbSelect($query,'numberOfAnnotatedArticles');	$firstRow = $rows[0];	$count = $firstRow[0];	return $count;}function articlesAnnotated($name) {	global $DOCUMENTS_TABLE, $DOC_JUDGEMENTS_TABLE;	$query = "SELECT $DOCUMENTS_TABLE.docid, title, topic " .		 "FROM $DOCUMENTS_TABLE, $DOC_JUDGEMENTS_TABLE " .		 "WHERE annotator = '$name' AND $DOCUMENTS_TABLE.docid=$DOC_JUDGEMENTS_TABLE.docID";	return dbSelect($query,'articlesAnnotated');}function selectNewFile($name){	global $DOCUMENTS_TABLE, $DOC_JUDGEMENTS_TABLE;	$query = "SELECT docid FROM $DOCUMENTS_TABLE;";	$rows1 = dbSelect($query,'selectNewFile');	$query = "SELECT docID FROM $DOC_JUDGEMENTS_TABLE WHERE annotator = '$name';";	$rows2 = dbSelect($query,'selectNewFile');	$annotated_docs = array();	foreach ($rows2 as $row) $annotated_docs[$row[0]] = true;	foreach ($rows1 as $row) {		$file = $row[0];		if (! $annotated_docs[$file]) return $file;	}	return false;}// Setting new valuesfunction setDocumentJudgements($login, $file, $notrelevant, $topic, $comment){	global $db_conn, $DOC_JUDGEMENTS_TABLE;	$query = "SELECT COUNT(*) FROM $DOC_JUDGEMENTS_TABLE WHERE docID='$file' AND annotator='$login';";	$rows = dbSelect($query, 'setDocumentJudgements');	$row = $rows[0];	$count = $row[0];	if ($notrelevant) $val = 'no';	else $val = 'yes'; 	$comment2 = addslashes($comment);	if ($count > 0) {		$query = "UPDATE $DOC_JUDGEMENTS_TABLE " . 			 "SET topic='$topic', relevant='$val', comment='$comment2' " .			 "WHERE docID='$file' AND annotator='$login';";		dbUpdate($query,'setDocumentJudgements()');	} else {		$query = "INSERT INTO $DOC_JUDGEMENTS_TABLE " .			 "VALUES ('$file', '$login', NOW(), '$val', '$topic', '$comment2');";		dbInsert($query, 'setDocumentJudgements');	}}function resetEventJudgements($login,$file) {	global $EVENT_JUDGEMENTS_TABLE;	$query = "DELETE FROM $EVENT_JUDGEMENTS_TABLE WHERE docID='$file' and annotator='$login';";	dbDelete($query, 'resetEventJudgements');}function addJudgement($login, $file, $event, $verdict){	global $EVENT_JUDGEMENTS_TABLE;	$query = "INSERT INTO $EVENT_JUDGEMENTS_TABLE VALUES ('$file', '$login', '$event', '$verdict');";	dbInsert($query, 'addJudgement');}// Reading document level annotations as well as topic listfunction comment($login,$file) {	global $DOC_JUDGEMENTS_TABLE;	$query = "SELECT `comment` FROM $DOC_JUDGEMENTS_TABLE WHERE docid='$file' AND annotator='$login';";	$result = dbSelect($query,'comment');	$firstRow = $result[0]; 	return stripslashes($firstRow[0]);}function topic($login,$file) {	global $DOC_JUDGEMENTS_TABLE;	$query = "SELECT topic FROM $DOC_JUDGEMENTS_TABLE WHERE docid='$file' AND annotator='$login';";	$result = dbSelect($query,'topic');	$firstRow = $result[0]; 	return $firstRow[0];}function notrelevant($login,$file){	global $DOC_JUDGEMENTS_TABLE;	$query = "SELECT relevant FROM $DOC_JUDGEMENTS_TABLE WHERE docid='$file' AND annotator='$login';";	$result = dbSelect($query,'notrelevant');	if (! $result) {		return 'no'; 	} else {		$firstRow = $result[0]; 		$val = $firstRow[0];		if ($val == 'yes') return 'no';		else return 'yes';	}}function echoTopics($currenttopic){	global $topics;	echo "Topic:&nbsp;\n";	echo "<SELECT name=topic>\n";	foreach ($topics as $topic) {		if ($topic == $currenttopic) {			echo "<OPTION selected>$topic</OPTION>\n";		} else {			echo "<OPTION>$topic</OPTION>\n";		}	}	echo "</SELECT>\n";}// Functions used for reading the documentfunction echoDocument ($fileName, $login){	$rows = allRowsForDocument($fileName);	$events = relevantEventsForDocument($login,$fileName);	echoSentenceRows($rows, $events); }function allRowsForDocument($doc){	global $SENTENCES_TABLE;	$query = "SELECT * FROM $SENTENCES_TABLE WHERE tmlfile = '$doc' order by sentid, offset";	return dbSelect($query,'allRowsForDocument');}function relevantEventsForDocument($login, $fileName){	global $EVENT_JUDGEMENTS_TABLE;	$query = "SELECT eventID FROM $EVENT_JUDGEMENTS_TABLE WHERE docID='$fileName' and annotator='$login';";	$rows = dbSelect($query, 'relevantEventsForDocument');	$events = array();	foreach ($rows as $row) {		$event = $row[0];		#echo $event."<br>";		$events[$event] = true;	}	return $events;}function echoSentenceRows ($rows, $events) {   // Echo rows from $SENTENCES_TABLE, insert breaks just before every   // first token of a sentence. The $printID variable is used to   // print sentence numbers. May need to add parameters to control   // whether and how numbers are printed.  	$printID = 1;	echo "<table cellpadding=5>\n";  	foreach ($rows as $row) {		if ($row[2] == 1) { 			$printID = 1; }		// strip the | from the varchar field		$text = substr($row[3],0,-1);		$tag = $row[4];		$id = $row[5];		if ($printID) {			$sentid = $row[1];		  	echo "<tr><td valign=\"top\">";		        $printID = 0; 		}		if ($tag) {			echoTag($id, $tag, $text, $events);			echo "\n";		} else {	  		echo $text; 			echo "\n";		}	}	echo "</table>\n";}function echoTag ($id, $tag, $text, $events){  	if ($tag == 'EVENT') {     		echo "[<span class=event>"; 		if ($events[$id]) {   			echo "<input type=checkbox name=$id checked>";		} else {   			echo "<input type=checkbox name=$id>";		}	}   	echo $text;  	if ($tag == 'EVENT') {     		echo "</input>";    		echo "</span>]";   	}}// DATABASE FUNCTIONSfunction dbSelect($query,$caller){	$result = dbQuery($query, $caller);	if ($result) {		$rows = array();		while ($row = mysql_fetch_row($result)) { $rows[] = $row; }		return $rows;	} else {		return $result;	}	}function dbUpdate($query,$caller) { 	return dbQuery($query, $caller); }function dbInsert($query,$caller) { 	return dbQuery($query, $caller); }function dbDelete($query,$caller) { 	return dbQuery($query, $caller); }function dbQuery($query, $caller){	global $db_conn, $debugging;	if ($debugging) echo $query."<br>\n";	$result = mysql_query($query, $db_conn);	if (mysql_errno()) {    		echo '<p><hr><p>MySQL Error:' . mysql_errno() . ": " . mysql_error(). "\n";		echo "<p>Query: $query<p>Caller: $caller<p><hr><p>\n\n"; 	}	return $result;}?>